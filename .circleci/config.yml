version: 2.1

orbs:
  aws-cli: circleci/aws-cli@3.1
  aws-eks: circleci/aws-eks@2.2.0
  aws-ecr: circleci/aws-ecr@8.2.1
  helm: circleci/helm@2.0.1

jobs:
  deploy:
    executor: aws-cli/default
    environment:
      EKS_CLUSTER_NAME: eks-dev-cluster
      EKS_CLUSTER_REGION: ap-south-1
      ECR_REPO_NAME: circle-ci-test
      ECR_REPO_REGION: ap-south-1
      HELM_APP_NAME: sample-nginx-app
      HELM_APP_DIR: sample-nginx-app
      HELM_APP_NAMESPACE: default
    steps:
      - checkout
      - helm/install-helm-client
      - setup_remote_docker:
          version: 20.10.11
      - aws-cli/setup:
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
          aws-region: AWS_DEFAULT_REGION
      - run:
          name: ECR Login And Docker Build Push
          command: |
            export AWS_ECR_REGISTRY_ID=$(aws sts get-caller-identity --query Account --output text)
            aws ecr get-login-password --region $ECR_REPO_REGION | docker login --username AWS --password-stdin $AWS_ECR_REGISTRY_ID.dkr.ecr.$ECR_REPO_REGION.amazonaws.com
            docker build -t $AWS_ECR_REGISTRY_ID.dkr.ecr.$ECR_REPO_REGION.amazonaws.com/$ECR_REPO_NAME:latest -t $AWS_ECR_REGISTRY_ID.dkr.ecr.$ECR_REPO_REGION.amazonaws.com/$ECR_REPO_NAME:$CIRCLE_SHA1 .
            docker push --all-tags $AWS_ECR_REGISTRY_ID.dkr.ecr.$ECR_REPO_REGION.amazonaws.com/$ECR_REPO_NAME
      - run:
        name: test
        command: | 
              export $(printf "AWS_ACCESS_KEY_ID=%s AWS_SECRET_ACCESS_KEY=%s AWS_SESSION_TOKEN=%s" \
              $(aws sts assume-role \
              --role-arn arn:aws:iam::192182953222:role/EKSFullAccess \
              --role-session-name EKS-Access \
              --query "Credentials.[AccessKeyId,SecretAccessKey,SessionToken]" \
              --output text))
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: $EKS_CLUSTER_NAME
          aws-region: $EKS_CLUSTER_REGION
          cluster-authentication-role-arn: arn:aws:iam::192182953222:role/EKSFullAccess
          install-kubectl: true
      - run:
          command: |
            kubectl get pods -n $HELM_APP_NAMESPACE
          name: Kubectl Check Pod in cluster
      - run:
          name: Helm Upgrade Command
          command: |
            helm upgrade -i $HELM_APP_NAME $HELM_APP_DIR -n $HELM_APP_NAMESPACE
workflows:
  main:
    jobs:
      - deploy:
          context: aws-credentials-context
